server:
  port: 8083

spring:
  application:
    name: auth-service

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${app.keycloak.serverUrl}/realms/${app.keycloak.realm}

  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true


  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    bootstrap-servers: localhost:29092

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka

app:
  keycloak:
    adminClientId: admin-cli
    adminClientSecret: ${KEYCLOAK_SECRET:test}
    userClientId: spring-security
    realm: test-realm
    serverUrl: http://localhost:9091
  scheduler:
    cron-every-5-seconds: "0/5 * * * * *"

  kafka:
    topics:
      passenger:
        name: passenger-topic
        partitions: 1
        replicas: 1
      driver:
        name: driver-topic
        partitions: 1
        replicas: 1

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html


management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus

  endpoint:
    prometheus:
      enabled: true

  tracing:
    sampling:
      probability: 1.0

  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans

logging:
  config: classpath:logback-spring.xml
